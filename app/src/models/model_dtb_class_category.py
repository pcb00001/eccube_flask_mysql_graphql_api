# The file has been generated by tool- nguyennt2@rikkeisoft.com
from config.database import Base
from sqlalchemy import Column, DECIMAL, DateTime, ForeignKey, Index, String, text
from sqlalchemy.dialects.mysql import DECIMAL, INTEGER, SMALLINT, TINYINT, LONGTEXT, TEXT
from sqlalchemy.orm import relationship

from models.model_dtb_class_name import ModelDtbClassName
from models.model_dtb_member import ModelDtbMember


class ModelDtbClassCategory(Base):
        __tablename__ = 'dtb_class_category'
 
        id = Column(INTEGER(10), primary_key=True, nullable=False) 
        class_name_id = Column(INTEGER(10), ForeignKey('dtb_class_name.id'), nullable=True)
        dtb_class_name = relationship('ModelDtbClassName', primaryjoin='ModelDtbClassCategory.class_name_id == ModelDtbClassName.id', backref='dtb_class_category_list')
 
        creator_id = Column(INTEGER(10), ForeignKey('dtb_member.id'), nullable=True)
        dtb_member = relationship('ModelDtbMember', primaryjoin='ModelDtbClassCategory.creator_id == ModelDtbMember.id', backref='dtb_class_category_list')
 
        backend_name = Column(String(255), nullable=True) 
        name = Column(String(255), nullable=False) 
        sort_no = Column(INTEGER(10), nullable=False) 
        visible = Column(TINYINT(3), nullable=False, server_default=text("'1'")) 
        create_date = Column(DateTime, nullable=False, comment='(DC2Type:datetimetz)') 
        update_date = Column(DateTime, nullable=False, comment='(DC2Type:datetimetz)') 
        discriminator_type = Column(String(255), nullable=False)