# The file has been generated by tool- nguyennt2@rikkeisoft.com
from config.database import Base
from sqlalchemy import Column, DECIMAL, DateTime, ForeignKey, Index, String, text
from sqlalchemy.dialects.mysql import DECIMAL, INTEGER, SMALLINT, TINYINT, LONGTEXT, TEXT
from sqlalchemy.orm import relationship

from models.model_dtb_order import ModelDtbOrder
from models.model_dtb_product import ModelDtbProduct
from models.model_dtb_product_class import ModelDtbProductClass
from models.model_dtb_shipping import ModelDtbShipping
from models.model_mtb_rounding_type import ModelMtbRoundingType
from models.model_mtb_tax_type import ModelMtbTaxType
from models.model_mtb_tax_display_type import ModelMtbTaxDisplayType
from models.model_mtb_order_item_type import ModelMtbOrderItemType


class ModelDtbOrderItem(Base):
        __tablename__ = 'dtb_order_item'
 
        id = Column(INTEGER(10), primary_key=True, nullable=False) 
        order_id = Column(INTEGER(10), ForeignKey('dtb_order.id'), nullable=True)
        dtb_order = relationship('ModelDtbOrder', primaryjoin='ModelDtbOrderItem.order_id == ModelDtbOrder.id', backref='dtb_order_item_list')
 
        product_id = Column(INTEGER(10), ForeignKey('dtb_product.id'), nullable=True)
        dtb_product = relationship('ModelDtbProduct', primaryjoin='ModelDtbOrderItem.product_id == ModelDtbProduct.id', backref='dtb_order_item_list')
 
        product_class_id = Column(INTEGER(10), ForeignKey('dtb_product_class.id'), nullable=True)
        dtb_product_class = relationship('ModelDtbProductClass', primaryjoin='ModelDtbOrderItem.product_class_id == ModelDtbProductClass.id', backref='dtb_order_item_list')
 
        shipping_id = Column(INTEGER(10), ForeignKey('dtb_shipping.id'), nullable=True)
        dtb_shipping = relationship('ModelDtbShipping', primaryjoin='ModelDtbOrderItem.shipping_id == ModelDtbShipping.id', backref='dtb_order_item_list')
 
        rounding_type_id = Column(SMALLINT(5), ForeignKey('mtb_rounding_type.id'), nullable=True)
        mtb_rounding_type = relationship('ModelMtbRoundingType', primaryjoin='ModelDtbOrderItem.rounding_type_id == ModelMtbRoundingType.id', backref='dtb_order_item_list')
 
        tax_type_id = Column(SMALLINT(5), ForeignKey('mtb_tax_type.id'), nullable=True)
        mtb_tax_type = relationship('ModelMtbTaxType', primaryjoin='ModelDtbOrderItem.tax_type_id == ModelMtbTaxType.id', backref='dtb_order_item_list')
 
        tax_display_type_id = Column(SMALLINT(5), ForeignKey('mtb_tax_display_type.id'), nullable=True)
        mtb_tax_display_type = relationship('ModelMtbTaxDisplayType', primaryjoin='ModelDtbOrderItem.tax_display_type_id == ModelMtbTaxDisplayType.id', backref='dtb_order_item_list')
 
        order_item_type_id = Column(SMALLINT(5), ForeignKey('mtb_order_item_type.id'), nullable=True)
        mtb_order_item_type = relationship('ModelMtbOrderItemType', primaryjoin='ModelDtbOrderItem.order_item_type_id == ModelMtbOrderItemType.id', backref='dtb_order_item_list')
 
        product_name = Column(String(255), nullable=False) 
        product_code = Column(String(255), nullable=True) 
        class_name1 = Column(String(255), nullable=True) 
        class_name2 = Column(String(255), nullable=True) 
        class_category_name1 = Column(String(255), nullable=True) 
        class_category_name2 = Column(String(255), nullable=True) 
        price = Column(DECIMAL(12, 2), nullable=False, server_default=text("'0.00'")) 
        quantity = Column(DECIMAL(10, 0), nullable=False, server_default=text("'0'")) 
        tax = Column(DECIMAL(10, 0), nullable=False, server_default=text("'0'")) 
        tax_rate = Column(DECIMAL(10, 0), nullable=False, server_default=text("'0'")) 
        tax_rule_id = Column(SMALLINT(5), nullable=True) 
        currency_code = Column(String(255), nullable=True) 
        processor_name = Column(String(255), nullable=True) 
        point_rate = Column(DECIMAL(10, 0), nullable=True) 
        discriminator_type = Column(String(255), nullable=False)