# The file has been generated by tool- nguyennt2@rikkeisoft.com
from config.database import Base
from sqlalchemy import Column, DECIMAL, DateTime, ForeignKey, Index, String, text
from sqlalchemy.dialects.mysql import DECIMAL, INTEGER, SMALLINT, TINYINT, LONGTEXT, TEXT
from sqlalchemy.orm import relationship

from models.model_dtb_product import ModelDtbProduct
from models.model_mtb_sale_type import ModelMtbSaleType
from models.model_dtb_class_category import ModelDtbClassCategory
from models.model_dtb_class_category import ModelDtbClassCategory
from models.model_dtb_delivery_duration import ModelDtbDeliveryDuration
from models.model_dtb_member import ModelDtbMember


class ModelDtbProductClass(Base):
        __tablename__ = 'dtb_product_class'
 
        id = Column(INTEGER(10), primary_key=True, nullable=False) 
        product_id = Column(INTEGER(10), ForeignKey('dtb_product.id'), nullable=True)
        dtb_product = relationship('ModelDtbProduct', primaryjoin='ModelDtbProductClass.product_id == ModelDtbProduct.id', backref='dtb_product_class_list')
 
        sale_type_id = Column(SMALLINT(5), ForeignKey('mtb_sale_type.id'), nullable=True)
        mtb_sale_type = relationship('ModelMtbSaleType', primaryjoin='ModelDtbProductClass.sale_type_id == ModelMtbSaleType.id', backref='dtb_product_class_list')
 
        class_category_id1 = Column(INTEGER(10), ForeignKey('dtb_class_category.id'), nullable=True)
        dtb_class_category = relationship('ModelDtbClassCategory', primaryjoin='ModelDtbProductClass.class_category_id1 == ModelDtbClassCategory.id', backref='dtb_product_class_list')
 
        class_category_id2 = Column(INTEGER(10), ForeignKey('dtb_class_category.id'), nullable=True)
        dtb_class_category = relationship('ModelDtbClassCategory', primaryjoin='ModelDtbProductClass.class_category_id2 == ModelDtbClassCategory.id', backref='dtb_product_class_list')
 
        delivery_duration_id = Column(INTEGER(10), ForeignKey('dtb_delivery_duration.id'), nullable=True)
        dtb_delivery_duration = relationship('ModelDtbDeliveryDuration', primaryjoin='ModelDtbProductClass.delivery_duration_id == ModelDtbDeliveryDuration.id', backref='dtb_product_class_list')
 
        creator_id = Column(INTEGER(10), ForeignKey('dtb_member.id'), nullable=True)
        dtb_member = relationship('ModelDtbMember', primaryjoin='ModelDtbProductClass.creator_id == ModelDtbMember.id', backref='dtb_product_class_list')
 
        product_code = Column(String(255), nullable=True) 
        stock = Column(DECIMAL(10, 0), nullable=True) 
        stock_unlimited = Column(TINYINT(3), nullable=False, server_default=text("'0'")) 
        sale_limit = Column(DECIMAL(10, 0), nullable=True) 
        price01 = Column(DECIMAL(12, 2), nullable=True) 
        price02 = Column(DECIMAL(12, 2), nullable=False) 
        delivery_fee = Column(DECIMAL(12, 2), nullable=True) 
        visible = Column(TINYINT(3), nullable=False, server_default=text("'1'")) 
        create_date = Column(DateTime, nullable=False, comment='(DC2Type:datetimetz)') 
        update_date = Column(DateTime, nullable=False, comment='(DC2Type:datetimetz)') 
        currency_code = Column(String(255), nullable=True) 
        point_rate = Column(DECIMAL(10, 0), nullable=True) 
        discriminator_type = Column(String(255), nullable=False)